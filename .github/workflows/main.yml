name: CI - Main

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18' # Node.js version

      - name: Create env file
        run: |
          touch .env
          echo NEXT_PUBLIC_GTM_ID=${{ secrets.NEXT_PUBLIC_GTM_ID }} >> .env
          echo POSTGRES_PRISMA_URL=${{ secrets.POSTGRES_PRISMA_URL }} >> .env
          echo SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }} >> .env
          echo NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }} >> .env
          echo NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }} >> .env

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: .next # or whatever directory your build outputs to

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy.key
          chmod 600 ~/.ssh/deploy.key
          ssh-keyscan ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Rsync files
        run: rsync -avzr -e 'ssh -i ~/.ssh/deploy.key' --delete ./dist/ ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:${{ secrets.REMOTE_APP_DIR }}

      - name: Restart App
        run: |
          ssh -i ~/.ssh/deploy.key ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "pm2 restart climb-bond && pm2 save"
